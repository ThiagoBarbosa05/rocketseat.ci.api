
name: CI 

on: 
  push:
    branches:
      - main
  
permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest
    # strategy:
    #   # matrix:
    #   #   node: [16, 18, 20]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js 
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: npm i
    - run: npm run test

    - name: Generate tag
      id: generate_tag
      run: |
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT
    
    - name: 'Configure aws credentials'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: 'arn:aws:iam::686255959518:role/ecr_role'
        aws-region: "us-east-1"
    
    - name: 'Login to AWS ECR' 
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker Image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TAG: ${{ steps.generate_tag.outputs.sha }}
      run: |
        docker build -t $REGISTRY/rocketseat-ci:$TAG .
        docker push $REGISTRY/rocketseat-ci:$TAG


    # - name: Login into the container registry
    #   uses: docker/login-action@v3
    #   with: 
    #     username: ${{secrets.DOCKERHUB_USERNAME}}
    #     password: ${{secrets.DOCKERHUB_TOKEN}}
    
    # - name: Build and Push
    #   uses: docker/build-push-action@v5
    #   with:
    #     push: true
    #     tags: thiago0503/rocketseat-ci-api:${{steps.generate_tag.outputs.sha}}, thiago0503/rocketseat-ci-api:latest
      
   

    # - name: Push Image
    #   run: docker push thiago0503/rocketseat-ci-api:${{steps.generate_tag.outputs.sha}}