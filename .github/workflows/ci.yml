
name: CI 

on: 
  push:
    branches:
      - main
  
permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest
    # strategy:
    #   # matrix:
    #   #   node: [16, 18, 20]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js 
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: npm i
    - run: npm run test
    
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v4
      env:
        GITHUB_TOKEN: ${{secrets.GH_TOKEN}}


    - name: Generate tag
      id: generate_tag
      run: |
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT
    
    # - name: 'Configure aws credentials'
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     role-to-assume: 'arn:aws:iam::686255959518:role/ecr_role'
    #     aws-region: "us-east-1"
    
    # - name: 'Login to AWS ECR' 
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v2

    # - name: Build Docker Image
    #   id: build-docker-image
    #   env:
    #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     TAG: ${{ steps.generate_tag.outputs.sha }}
    #   run: |
    #     docker build -t $REGISTRY/rocketseat-ci:$TAG .
    #     docker push $REGISTRY/rocketseat-ci:$TAG
    #     docker tag $REGISTRY/rocketseat-ci:$TAG $REGISTRY/rocketseat-ci:latest
    #     docker push $REGISTRY/rocketseat-ci:latest
    #     IMAGE=$(echo $REGISTRY/rocketseat-ci:$TAG)
    #     echo "image=$IMAGE" >> $GITHUB_OUTPUT
    
    # - name: Deploy to App Runner
    #   id: deploy-app-runner
    #   uses: awslabs/amazon-app-runner-deploy@main
    #   with:
    #     service: rocketseat-api
    #     image: ${{steps.build-docker-image.outputs.image}}
    #     access-role-arn: arn:aws:iam::686255959518:role/app-runner-role
    #     region: us-east-1
    #     cpu: 1
    #     memory: 2
    #     port: 3000
    #     wait-for-service-stability-seconds: 180
    
    # - name: App Runner check
    #   run: echo "App Runner running...${{steps.deploy-app-runner.outputs.service-url}}"

    - name: Login into the container registry
      uses: docker/login-action@v3
      with: 
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}
    
    - name: Build and Push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: thiago0503/rocketseat-ci-api:${{steps.generate_tag.outputs.sha}}, thiago0503/rocketseat-ci-api:latest
      
   

    - name: Push Image
      run: docker push thiago0503/rocketseat-ci-api:${{steps.generate_tag.outputs.sha}}